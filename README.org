#+TITLE:  Tutorial on publishing 5-star open data
#+AUTHOR: Christoph Lange
#+EMAIL:  math.semantic.web@gmail.com
#+DATE:   <2014-08-21 Thu>

*Work in Progress – expect more to be here by <2014-08-25 Mon>*

Practical examples of how to create and publish [[http://5stardata.info][5-star open data]] on the Web; originally written for the [[http://www.emse.fr/~zimmermann/WI_2014_Site/][2014 Web Intelligence Summer School “Web of Data”]].

Published online at http://clange.github.io/5stardata-tutorial/

* Use case: event schedule and presenters of a summer school
  Original data (HTML): [[http://www.emse.fr/~zimmermann/WI_2014_Site/Programme/][schedule]], [[http://www.emse.fr/~zimmermann/WI_2014_Site/Committee/][presenters]]

* ★ PDF
  [[http://5stardata.info/#addendum1][Cost and benefits of ★ Web data]]

  [[file:1star_PDF/schedule.pdf][schedule.pdf]]
* ★★ Excel (*.xls)
  [[http://5stardata.info/#addendum2][Cost and benefits of ★★ Web data]]
  
  [[file:2star_Excel/schedule.xls][schedule.xls]]

  It is not impossible to read this file outside of Excel:
#+NAME: code-process-xls
#+BEGIN_SRC sh :results output replace :exports both
perl -MSpreadsheet::ParseExcel -le '
  print Spreadsheet::ParseExcel->new()
    ->parse("2star_Excel/schedule.xls")
    ->worksheet("Schedule")
    ->get_cell(1,0)
    ->value();'
#+END_SRC
  
  Output:
#+RESULTS: code-process-xls
: 25 Aug 2014 09:00

  It is harder, but not impossible, to have questions answered such as “when is the first coffee break”.

  Think of an algorithm that does the following:
  1. In the column titled “Event”, identify all cells whose value is “Coffee break”.
  2. On each row of such a cell, get the entry of the cell in the “Time” column.
  3. Sort these cells and return the smallest value.

  However, free software libraries do not support all features of this file format.  Here is what happens when we ask a popular free tool to determine the type of this file:
#+NAME: code-file-xls
#+BEGIN_SRC sh :results output replace :exports both
file 2star_Excel/schedule.xls
#+END_SRC

  Output:
#+RESULTS: code-file-xls
: 2star_Excel/schedule.xls: Composite Document File V2 Document, corrupt: Can't read SSAT

* ★★★ OpenDocument (*.ods)
  [[http://5stardata.info/#addendum3][Cost and benefits of ★★★ Web data]]

  [[file:1star_PDF/schedule.pdf][schedule.ods]]

  Shell command:
#+NAME: code-unzip-ods
#+BEGIN_SRC sh :results output replace :exports both
unzip -l 3star_OpenDocument/schedule.ods
#+END_SRC

#+RESULTS: code-unzip-ods
#+begin_example
Archive:  3star_OpenDocument/schedule.ods
  Length      Date    Time    Name
---------  ---------- -----   ----
       46  08-21-2014 08:13   mimetype
    52832  08-21-2014 08:13   Thumbnails/thumbnail.png
    27279  08-21-2014 08:13   styles.xml
    15227  08-21-2014 08:13   content.xml
      852  08-21-2014 08:13   meta.xml
     8774  08-21-2014 08:13   settings.xml
      899  08-21-2014 08:13   manifest.rdf
        0  08-21-2014 08:13   Configurations2/accelerator/current.xml
        0  08-21-2014 08:13   Configurations2/progressbar/
        0  08-21-2014 08:13   Configurations2/statusbar/
        0  08-21-2014 08:13   Configurations2/images/Bitmaps/
        0  08-21-2014 08:13   Configurations2/floater/
        0  08-21-2014 08:13   Configurations2/toolbar/
        0  08-21-2014 08:13   Configurations2/popupmenu/
        0  08-21-2014 08:13   Configurations2/toolpanel/
        0  08-21-2014 08:13   Configurations2/menubar/
     1093  08-21-2014 08:13   META-INF/manifest.xml
---------                     -------
   107002                     17 files
#+end_example
* ★★★☆ CSV
  We need one CSV file per sheet:
  * [[file+emacs:3.5star_CSV/schedule.csv][schedule.csv]]
  * [[file+emacs:3.5star_CSV/presenters.csv][presenters.csv]]
  
* ★★★★ CSV with URIs
  [[http://5stardata.info/#addendum4][Cost and benefits of ★★★★ Web data]]

  From here onwards, [[http://5stardata.info/][the original 5-star open data examples]] use RDF.  We will continue with CSV for a while, to point out that open data on the Web is not /only/ RDF.

  * [[file+emacs:4star_CSV/schedule.csv][schedule.csv]]
  * [[file+emacs:4star_CSV/presenters.csv][presenters.csv]]

** Links using Web-scale identifiers
   An example from the 3-star CSV:
#+NAME: code-csv-id-before
#+BEGIN_SRC sh :results output verbatim replace :exports results
head -n 1 3.5star_CSV/schedule.csv ;
echo ... ;
fgrep "Markus Krötzsch" 3.5star_CSV/schedule.csv ;
echo ;
head -n 1 3.5star_CSV/presenters.csv ;
echo ... ;
fgrep "Markus Krötzsch" 3.5star_CSV/presenters.csv ;
#+END_SRC
#+RESULTS: code-csv-id-before
: Time,Event,Type,Presenter,Location
: ...
: 27 Aug 2014 09:00,Wikidata,Keynote,Markus Krötzsch,
: 27 Aug 2014 10:15,Working with Wikidata: A Hands-on Guide for Researchers and Developers,Tutorial,Markus Krötzsch,
: 
: Name,Affiliation,Town,Country
: ...
: Markus Krötzsch,TU Dresden,Dresden,Germany

  * How do we know it's twice the same instructor?
  * How can we make this connection Web-safe?  (There might be others by the same name; how about [[https://www.facebook.com/markus.krotzsch][this person on Facebook]]?)
  
  Give the presenter a unique identifier!
#+NAME: code-csv-id-after
#+BEGIN_SRC sh :results output verbatim replace :exports results
head -n 1 4star_CSV/schedule.csv ;
echo ... ;
fgrep "#markus" 4star_CSV/schedule.csv ;
echo ;
head -n 1 4star_CSV/presenters.csv ;
echo ... ;
fgrep "#markus" 4star_CSV/presenters.csv ;
#+END_SRC
#+RESULTS: code-csv-id-after
: Time,Event,Type,Presenter,Location
: ...
: 27 Aug 2014 09:00,Wikidata,Keynote,http://ecole.web-intelligence-rhone-alpes.org/presenters/#markus,
: 27 Aug 2014 10:15,Working with Wikidata: A Hands-on Guide for Researchers and Developers,Tutorial,http://ecole.web-intelligence-rhone-alpes.org/presenters/#markus,
: 
: ID,Name,Affiliation,Town,Country
: ...
: http://ecole.web-intelligence-rhone-alpes.org/presenters/#markus,Markus Krötzsch,TU Dresden,Dresden,Germany

** Datatypes
   With an alternative export configuration, the 3-star CSV may have ended up [[file+emacs:3.5star_CSV/schedule-alt.csv][like this]]:

#+NAME: code-csv-datatype-before
#+BEGIN_SRC sh :results output verbatim replace :exports results
head -n 3 3.5star_CSV/schedule-alt.csv ;
#+END_SRC
#+RESULTS: code-csv-datatype-before
: Time,Event,Type,Presenter,Location
: 08/25/2014 09:00:00,Introduction,,,
: 08/25/2014 09:15:00,Keynote,Keynote,Stefan Decker,

   =08/25/2014= is sufficiently unambiguous, but what does =01/02/03= mean?

   * 1 February 2003?
   * 2 January 2003?
   * 3 February 2001?
   * …?

* ★★★★☆ CSV with URIs, schema and links

* ★★★★★ RDF (and a comparison to CSV)
  [[http://5stardata.info/#addendum5][Cost and benefits of ★★★★★ Web data]]

* ★★★★★☆ Further possible improvements: standard schemas, quality, …

* Credits
  This tutorial is based on an idea by [[http://www.emse.fr/~zimmermann/][Antoine Zimmermann]].  The motivation was to prepare something for the [[http://www.emse.fr/~zimmermann/WI_2014_Site/][2014 Web Intelligence Summer School “Web of Data”]] that's not too heavily biased towards RDF.

* License
  [[https://i.creativecommons.org/l/by-sa/4.0/88x31.png]]\\
  This work is licensed under a [[http://creativecommons.org/licenses/by-sa/4.0/][Creative Commons Attribution-ShareAlike 4.0 International License]].
